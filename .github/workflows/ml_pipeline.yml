name: ML CI/CD Pipeline (multi-stage)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # üß™ 1Ô∏è‚É£ Test del c√≥digo
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest tests/

  # üß† 2Ô∏è‚É£ Entrenamiento del modelo
  train:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Train model
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          python src/train.py

      - name: Upload trained model
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: model.pkl

  # üöÄ 3Ô∏è‚É£ Build y prueba del contenedor Docker
  deploy:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4   # üîë Necesario para tener acceso al Dockerfile

      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model

      - name: Build Docker image
        run: |
          docker build -t ml-model-api .
          docker images

      - name: Run container test
        run: |
          docker run -d -p 8000:8000 ml-model-api
          sleep 5
          curl -f http://localhost:8000/ || exit 1

      - name: Stop running containers
        if: always()
        run: |
          docker ps -q | xargs -r docker stop
